{"version":3,"sources":["assets/images/angeli.jpg","homePage/navBar.js","submissionsPage/submissions.js","homePage/hero.js","homePage/formSubmission.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","role","href","Submissions","className","src","alt","Hero","Angeli","SubmissionForm","state","name","tattooName","imageUrl","tattooDescription","handleChange","event","console","log","target","setState","value","handleSubmit","preventDefault","submission","axios","post","then","res","data","imgPreview","this","onSubmit","type","onChange","React","Component","App","exact","path","component","Fragment","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c5b7d9c8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/angeli.8d045433.jpg\";","import React, { Component } from \"react\";\n\nconst NavBar = () => {\n  return (\n    <header role=\"banner\">\n      <nav role=\"navigation\">\n        <ul>\n        <li>\n            <a href=\"/\">Home</a>\n          </li>\n          <li>\n            <a href=\"/submit\">Submissions</a>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default NavBar;","import React, { Component } from \"react\";\n\nconst Submissions = () => {\n  return (\n    <div className=\"submissions-container\">\n      {/* first submission */}\n      <div className=\"submission\">\n\t\t    <h1>Title of Tattoo</h1>\n\t\t\t<p>Description: </p>\n\t\t    <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/10558/ARCH-kimon-maritz-183501-unsplash.jpg\" alt=\"generic image\" />\n\t\t    <p>Submitted by: </p>\n\t\t  </div>\n\n      {/* second submission  */}\n      <div className=\"submission\">\n\t\t    <h1>Title of Tattoo</h1>\n\t\t\t<p>Description: </p>\n\t\t    <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/10558/ARCH-kimon-maritz-183501-unsplash.jpg\" alt=\"generic image\" />\n\t\t    <p>Submitted by: </p>\n\t\t  </div>\n\n\t\t  {/* second submission  */}\n\t\t  <div className=\"submission\">\n\t\t    <h1>Title of Tattoo</h1>\n\t\t\t<p>Description: </p>\n\t\t\t<div className=\"image-control\">\n\t\t    <img src=\"https://i.ytimg.com/vi/MPV2METPeJU/maxresdefault.jpg\" alt=\"generic image\" />\n\t\t\t</div>\n\t\t    <p>Submitted by: </p>\n\t\t  </div>\n\n\t\t  {/* second submission  */}\n\t\t  <div className=\"submission\">\n\t\t    <h1>Title of Tattoo</h1>\n\t\t\t<p>Description: </p>\n\t\t    <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/10558/ARCH-kimon-maritz-183501-unsplash.jpg\" alt=\"generic image\" />\n\t\t    <p>Submitted by: </p>\n\t\t  </div>\n\n\t\t  {/* second submission  */}\n\t\t  <div className=\"submission\">\n\t\t    <h1>Title of Tattoo</h1>\n\t\t\t<p>Description: </p>\n\t\t    <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/10558/ARCH-kimon-maritz-183501-unsplash.jpg\" alt=\"generic image\" />\n\t\t    <p>Submitted by: </p>\n\t\t  </div>\n\n\t\t  {/* second submission  */}\n\t\t  <div className=\"submission\">\n\t\t    <h1>Title of Tattoo</h1>\n\t\t\t<p>Description: </p>\n\t\t    <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/10558/ARCH-kimon-maritz-183501-unsplash.jpg\" alt=\"generic image\" />\n\t\t    <p>Submitted by: </p>\n\t\t  </div>\n\n\n\t\t  {/* second submission  */}\n\t\t  <div className=\"submission\">\n\t\t    <h1>Title of Tattoo</h1>\n\t\t\t<p>Description: </p>\n\t\t    <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/10558/ARCH-kimon-maritz-183501-unsplash.jpg\" alt=\"generic image\" />\n\t\t    <p>Submitted by: </p>\n\t\t  </div>\n\n\n\t\t  {/* second submission  */}\n\t\t  <div className=\"submission\">\n\t\t    <h1>Title of Tattoo</h1>\n\t\t\t<p>Description: </p>\n\t\t    <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/10558/ARCH-kimon-maritz-183501-unsplash.jpg\" alt=\"generic image\" />\n\t\t    <p>Submitted by: </p>\n\t\t  </div>\n\n\n\t\t  {/* second submission  */}\n\t\t  <div className=\"submission\">\n\t\t    <h1>Title of Tattoo</h1>\n\t\t\t<p>Description: </p>\n\t\t    <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/10558/ARCH-kimon-maritz-183501-unsplash.jpg\" alt=\"generic image\" />\n\t\t    <p>Submitted by: </p>\n\t\t  </div>\n\n    </div>\n  );\n};\n\nexport default Submissions;","import React from \"react\";\nimport Angeli from '../assets/images/angeli.jpg';\n\nconst Hero = () => {\n  return (\n    \n      <div className=\"hero\">\n    <h1>Angeli's Next Tattoo </h1>  \n    <img src={Angeli} alt=\"a photo of Octavia Butler\"/>\n    </div>\n  );\n};\n\nexport default Hero;","import React from 'react';\nimport axios from 'axios';\n\nexport default class SubmissionForm extends React.Component {\n  state = {\n    name: '',\n    tattooName: '',\n    imageUrl: '',\n    tattooDescription: '',\n  }\n\n  handleChange = event => {\n      console.log(event.target);\n    this.setState({\n        [event.target.name]: event.target.value,\n      });\n\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const submission = {\n      name: this.state.name,\n      tattooName: this.state.tattooName,\n      imageUrl: this.state.imageUrl,\n      tattooDescription: this.state.tattooDescription\n    };\n\n    axios.post(`http://localhost:5000/submission`, { submission })\n      .then(res => {\n        console.log(res);\n        console.log(res.data);\n      })\n  }\n\n  render() {\n    let imgPreview;\n    if (this.state.imageUrl) {\n        imgPreview = <img src={this.state.imageUrl} alt='your suggested tattoo' />;\n    }\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n        <h1>Make a submission</h1>\n        <p>Enter your name:</p>\n      <input\n        type='text'\n        name='name'\n        onChange={this.handleChange}\n      />\n      <p>Tattoo Name:</p>\n      <input\n        type='text'\n        name='tattooName'\n        onChange={this.handleChange}\n      />\n      <p>Tattoo Image Url:</p>\n      <input\n        type='url'\n        name='imageUrl'\n        onChange={this.handleChange}\n      />\n      {imgPreview}\n\n<p>Tattoo Description:</p>\n      <textarea\n        type='text'\n        name='tattooDescription'\n        onChange={this.handleChange}\n      />\n\n          <button type=\"submit\">Add</button>\n        </form>\n      </div>\n    )\n  }\n}\n","import React, { Component } from \"react\";\nimport NavBar from \"./homePage/navBar\";\nimport Submissions from \"./submissionsPage/submissions\";\nimport Hero from \"./homePage/hero\";\nimport SubmissionForm from \"./homePage/formSubmission\";\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <NavBar />\n        <Router>\n          <Route exact path=\"/submit\" component={Submissions} />\n          <Route\n            exact\n            path=\"/\"\n            component={() => {\n              return (\n                <React.Fragment>\n                  <Hero />\n                  <hr></hr>\n                  <SubmissionForm />\n                  <hr></hr>\n                  \n                  \n                </React.Fragment>\n              );\n            }}\n          />\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n/*styles */\nimport \"./assets/styles/index.scss\";\nimport \"./assets/styles/form.scss\";\nimport \"./assets/styles/submissions.scss\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}